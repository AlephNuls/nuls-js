// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creating QR codes an address 1`] = `
Array [
  Array [
    Object {
      "data": Array [
        126,
        138,
      ],
      "type": "Buffer",
    },
  ],
  Array [
    "",
  ],
]
`;

exports[`creating QR codes an address 2`] = `
Array [
  Array [
    Object {
      "bitmap": Object {
        "height": 2,
        "width": 1,
      },
      "composite": [MockFunction] {
        "calls": [Circular],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "bar",
          },
        ],
      },
      "getBase64Async": [MockFunction] {
        "calls": Array [
          Array [
            "image/png",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "baz",
          },
        ],
      },
    },
    0,
    0,
  ],
]
`;

exports[`creating QR codes an address 3`] = `
Array [
  Array [
    "nuls:Nse1TYHc6Rxs84iimrnygSF2kqrUAQM6",
    Object {
      "errorCorrectionLevel": "H",
    },
  ],
]
`;

exports[`creating QR codes an address with an amount 1`] = `
Array [
  Array [
    Object {
      "data": Array [
        126,
        138,
      ],
      "type": "Buffer",
    },
  ],
  Array [
    "",
  ],
]
`;

exports[`creating QR codes an address with an amount 2`] = `
Array [
  Array [
    Object {
      "bitmap": Object {
        "height": 2,
        "width": 1,
      },
      "composite": [MockFunction] {
        "calls": [Circular],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "bar",
          },
        ],
      },
      "getBase64Async": [MockFunction] {
        "calls": Array [
          Array [
            "image/png",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "baz",
          },
        ],
      },
    },
    0,
    0,
  ],
]
`;

exports[`creating QR codes an address with an amount 3`] = `
Array [
  Array [
    "nuls:Nse1TYHc6Rxs84iimrnygSF2kqrUAQM6?amount=10",
    Object {
      "errorCorrectionLevel": "H",
    },
  ],
]
`;

exports[`creating QR codes error correction level option setting \`L\` 1`] = `
Array [
  Array [
    Object {
      "data": Array [
        126,
        138,
      ],
      "type": "Buffer",
    },
  ],
  Array [
    "",
  ],
]
`;

exports[`creating QR codes error correction level option setting \`L\` 2`] = `
Array [
  Array [
    Object {
      "bitmap": Object {
        "height": 2,
        "width": 1,
      },
      "composite": [MockFunction] {
        "calls": [Circular],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "bar",
          },
        ],
      },
      "getBase64Async": [MockFunction] {
        "calls": Array [
          Array [
            "image/png",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "baz",
          },
        ],
      },
    },
    0,
    0,
  ],
]
`;

exports[`creating QR codes error correction level option setting \`L\` 3`] = `
Array [
  Array [
    "nuls:Nse1TYHc6Rxs84iimrnygSF2kqrUAQM6",
    Object {
      "errorCorrectionLevel": "L",
    },
  ],
]
`;

exports[`creating QR codes logo colours 1`] = `
Array [
  Array [
    Object {
      "data": Array [
        126,
        138,
      ],
      "type": "Buffer",
    },
  ],
  Array [
    "",
  ],
  Array [
    Object {
      "data": Array [
        126,
        138,
      ],
      "type": "Buffer",
    },
  ],
  Array [
    "",
  ],
  Array [
    Object {
      "data": Array [
        126,
        138,
      ],
      "type": "Buffer",
    },
  ],
  Array [
    "",
  ],
]
`;

exports[`creating QR codes logo colours 2`] = `
Array [
  Array [
    Object {
      "bitmap": Object {
        "height": 2,
        "width": 1,
      },
      "composite": [MockFunction] {
        "calls": [Circular],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "bar",
          },
          Object {
            "isThrow": false,
            "value": "bar",
          },
          Object {
            "isThrow": false,
            "value": "bar",
          },
        ],
      },
      "getBase64Async": [MockFunction] {
        "calls": Array [
          Array [
            "image/png",
          ],
          Array [
            "image/png",
          ],
          Array [
            "image/png",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "baz",
          },
          Object {
            "isThrow": false,
            "value": "baz",
          },
          Object {
            "isThrow": false,
            "value": "baz",
          },
        ],
      },
    },
    0,
    0,
  ],
  Array [
    Object {
      "bitmap": Object {
        "height": 2,
        "width": 1,
      },
      "composite": [MockFunction] {
        "calls": [Circular],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "bar",
          },
          Object {
            "isThrow": false,
            "value": "bar",
          },
          Object {
            "isThrow": false,
            "value": "bar",
          },
        ],
      },
      "getBase64Async": [MockFunction] {
        "calls": Array [
          Array [
            "image/png",
          ],
          Array [
            "image/png",
          ],
          Array [
            "image/png",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "baz",
          },
          Object {
            "isThrow": false,
            "value": "baz",
          },
          Object {
            "isThrow": false,
            "value": "baz",
          },
        ],
      },
    },
    0,
    0,
  ],
  Array [
    Object {
      "bitmap": Object {
        "height": 2,
        "width": 1,
      },
      "composite": [MockFunction] {
        "calls": [Circular],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "bar",
          },
          Object {
            "isThrow": false,
            "value": "bar",
          },
          Object {
            "isThrow": false,
            "value": "bar",
          },
        ],
      },
      "getBase64Async": [MockFunction] {
        "calls": Array [
          Array [
            "image/png",
          ],
          Array [
            "image/png",
          ],
          Array [
            "image/png",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "baz",
          },
          Object {
            "isThrow": false,
            "value": "baz",
          },
          Object {
            "isThrow": false,
            "value": "baz",
          },
        ],
      },
    },
    0,
    0,
  ],
]
`;

exports[`creating QR codes logo colours 3`] = `
Array [
  Array [
    "nuls:Nse1TYHc6Rxs84iimrnygSF2kqrUAQM6",
    Object {
      "errorCorrectionLevel": "H",
    },
  ],
  Array [
    "nuls:Nse1TYHc6Rxs84iimrnygSF2kqrUAQM6",
    Object {
      "errorCorrectionLevel": "H",
    },
  ],
  Array [
    "nuls:Nse1TYHc6Rxs84iimrnygSF2kqrUAQM6",
    Object {
      "errorCorrectionLevel": "H",
    },
  ],
  Array [
    "nuls:Nse1TYHc6Rxs84iimrnygSF2kqrUAQM6",
    Object {
      "errorCorrectionLevel": "H",
    },
  ],
]
`;

exports[`creating QR codes private ket import 1`] = `
Array [
  Array [
    Object {
      "data": Array [
        126,
        138,
      ],
      "type": "Buffer",
    },
  ],
  Array [
    "",
  ],
]
`;

exports[`creating QR codes private ket import 2`] = `
Array [
  Array [
    Object {
      "bitmap": Object {
        "height": 2,
        "width": 1,
      },
      "composite": [MockFunction] {
        "calls": [Circular],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "bar",
          },
        ],
      },
      "getBase64Async": [MockFunction] {
        "calls": Array [
          Array [
            "image/png",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "baz",
          },
        ],
      },
    },
    0,
    0,
  ],
]
`;

exports[`creating QR codes private ket import 3`] = `
Array [
  Array [
    "nuls:5af6f2f9aa014d467c22a7523ed352a0eaed4816b4caa3cc52c15d68d627089db055f95d3de88e01fab28d2fa96fb10e",
    Object {
      "errorCorrectionLevel": "H",
    },
  ],
]
`;
